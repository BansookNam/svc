/*
 * Copyright 2018 NAVER Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */package com.naver.android.svc.compiler


import com.squareup.kotlinpoet.*

class ControlTowerGenerator(private val packageName: String, private val annotatedClazz: ControlTowerAnnotatedClass) {
    private val controlTowerName: String

    private val screenParamSpec: PropertySpec
        get() = PropertySpec.builder("screen", annotatedClazz.screen)
            .addModifiers(KModifier.PUBLIC)
            .getter(FunSpec.getterBuilder()
                .addStatement("return baseScreen as ${annotatedClazz.screenName}")
                .build())
            .build()

    private val viewsParamSpec: PropertySpec
        get() = PropertySpec.builder("views", annotatedClazz.baseView)
            .addModifiers(KModifier.PUBLIC)
            .getter(FunSpec.getterBuilder()
                .addStatement("return baseViews as ${annotatedClazz.baseViewName}")
                .build())
            .build()

    init {
        this.controlTowerName = annotatedClazz.clazzName
    }

    fun generate(): TypeSpec {
        val builder = TypeSpec.classBuilder(getControlTowerName())
            .addKdoc(
                "Generated by SVC processor. (https://github.com/naver/svc). Don't change this class.\n")
            .addModifiers(KModifier.PUBLIC)
            .addModifiers(KModifier.ABSTRACT)
            .addProperty(screenParamSpec)
            .addProperty(viewsParamSpec)
            .superclass(
                ClassName("com.naver.android.svc.core.controltower", "ControlTower"))
        return builder.build()
    }

    fun getControlTowerName(): String {
        return "SVC_$controlTowerName"
    }
}
